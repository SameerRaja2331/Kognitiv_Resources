import pyttsx3  #pip install pyttsx3
import speech_recognition as sr  #pip install speechRecognition
import datetime
import wikipedia  #pip install wikipedia
import webbrowser 
import os
import smtplib

'''Microsoft Speech API (SAPI5) is the technology for voice recognition and synthesis provided by Microsoft. 
Starting with Windows XP, it ships as part of the Windows OS.'''

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')  #To get the voices that are present in your system.
#print(voices[1].id) 
engine.setProperty('voice',voices[1].id) #Set your desired voice here.

'''speak function speaks out the text that is given'''
def speak(audio):  
    engine.say(audio)  #speaks out the audio
    engine.runAndWait()

''' wishme function takes the date and time from datetime module and according to the time we set the conditions
    to wish you according to the time.'''
def wishme():
    hour = int(datetime.datetime.now().hour)
    
    if (hour>=0 and hour <12):
        speak("Good Morning Sir")

    elif (hour>=12 and hour<18):
        speak("Good Afternoon Sir")

    else:
        speak("Good Evening Sir")

    speak("Kognitiv is active now. What can I do for you Sir")

'''Here takecommand function takes the voice command from the user and converts the voice to text ,then the
   text will be stored in a variable i.e,(query) for further usage.'''
def takeCommand():
    
    r = sr.Recognizer()
    with sr.Microphone() as source:  #enabling microphone 
        print("Listening.......")
        r.pause_threshold = 1  #seconds of non-speaking audio before a phrase is considered complete
        audio = r.listen(source)  #listening the voice from the user
    
    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in') #Performs speech recognition on 'audio_data' using the Google Speech Recognition API.
        print(f"User said : {query}\n")
        
    '''If any error occurs in try block then it goes to except block and prints out the error and statements in except block'''
    
    except Exception as e:
        print(e)
        print("Say that again please...")
        return "None"

    return query

'''In sendEmail function we pass two parameters i.e, to (Reciever address) & content (text that you want to send)
   using smtplib '''
def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com',587) #conifguration
    server.ehlo()
    server.starttls()
    server.login('your-email-id','your-email-password') 
    
    '''In your-email-id place type your mail address and in your-email-password type your email Password'''
    
    server.sendmail("your-email-id",to,content)
    server.close()


if __name__ == "__main__":
    wishme() #runs statements in wishme function described above
    
    '''Here I have given chrome path to open any urls in google chrome '''
    
    chrome_path = 'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s'
    while True: 
    
       ''' while True is an infinite loop.I have set this as infinite loop to recognize my voice perform multiple tasks
           to break this infinite loop I have a given a condition below '''
           
        query = takeCommand().lower()
        
        '''Now here I perform the tasks based on the query. For example: if my query contains the word wikipedia then
           the below if condition will be satisfied, the statememts in that block will be executed else
           it checks the further if conditions.'''
           
        if 'wikipedia' in query:
            speak("Searching wikipedia......")
            query = query.replace("wikipedia","")
            results = wikipedia.summary(query,sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.get(chrome_path).open("youtube.com") #To open url(youtube.com) in google chrome browser
        
        elif 'open google' in query:
            webbrowser.get(chrome_path).open("google.com") #To open url(google.com) in google chrome browser

        elif 'play music' in query:
            music_dir = 'H:\\songs' #providing the path where your songs are present
            songs = os.listdir(music_dir) #listing out all the songs in the music_dir (directory)
            print(songs)
            os.startfile(os.path.join(music_dir, songs[2])) 
            
            '''Start a file with its associated application.When "operation" is not specified or "open", this acts like double-clicking
               the file in Explorer, or giving the file name as an argument to the DOS "start" command: the file is opened with 
               whatever application (if any) its extension is associated. '''

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S") # taking the time in string format
            print(strTime)
            speak(f"Sir, the time is {strTime}") 
            #The string(data) inside speak goes to the speak function and it executs the speak function.
        
        ''' Here i'm opening Visual studio Code application through this below code'''
        
        elif 'open code' in query:
            codepath = r"C:\Users\samee\AppData\Local\Programs\Microsoft VS Code\Code.exe" #location of the application
            os.startfile(codepath)  #To open the application.

        elif 'send mail' in query:
            try:
                speak("What's the message sir")
                content = takeCommand() 
                #calls the takeCommand function, then listens the message to be sent from user and stores that in content.
                to = "receiver-mail-address" # receiver mail address
                sendEmail(to, content) #calling the sendEmail function to send the mail.
                speak("Email has been sent sir..")
            except Exception as e:
                print(e)
                speak("sorry I am unable to send this email")

        elif 'close' in query: # to break the while loop
            break
